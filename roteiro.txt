deixar o mozzila aberto também

ROTEIRO:

- Apresentação do Meteor.js

- Mostrar o layout estático - D:\HTML - JS - Projects\ FIP_tutorial_front

- Criação da aplicação
- Pastas especiais
- Fazer o console.log no server e no client

- Editando e criando um template simples - ok
- Criação de um Collections de Fotos - ok

Sessões - Criando um relógio
Respondendo a ações do usuário
Inserindo e Removendo itens de uma coleção
Altenticação do Usuario
Criando uma nav bar com bootstrap
Hackeando o site
Tornando a aplicação mais segura
Deploy da aplicação online
Dicas de desenvolvimento
Onde encontrar Tutorias


    <------     main.html      ------->
        Editando e criando um template

        <body>
          <h1>Welcome to Meteor!</h1>
          {{> hello}}

        </body>


        <template name="hello">
           <p>Olá Mundo</p>
        </template>

    <--------------->



    Criação de um Collections de Postagem
    <------     main.js - server / cliten      ------->

        Postagens = new Mongo.Collection("postagens");

        Postagens.insert(
            {
                imgSrc:'https://upload.wikimedia.org/wikipedia/commons/e/eb/Iron_Maiden_-_bass_and_guitars_30nov2006.jpg',
                descricao:'Iron Maiden',
                criadoEm: new Date(),
            }
        );

        Postagens.insert(
            {
                imgSrc:'http://static2.businessinsider.com/image/56d991d5dd08953d0d8b4806-2000-1125/night%20king%20white%20walker%20hardhome%20game%20of%20thrones%20hbo.jpeg.jpg',
                descricao:'The winter is comming, menos em Patos',
                criadoEm:new Date(),
            }
        );

        Postagens.insert(
            {
                imgSrc:'http://images1.mtv.com/uri/mgid:file:docroot:vh1.com:/sitewide/flipbooks/img/news/10_hottest_albums_september_08/05_81091189.jpg?enlarge=false&matte=true&matteColor=black&quality=0.85',
                descricao:'Say my name',
                criadoEm:new Date(),
            }
        );

        Postagens.insert(
            {
                imgSrc:'http://artandroll.net/wp-content/uploads/2016/07/sepultura-2013.jpg',
                descricao:'Sepultura do Brasil',
                criadoEm:new Date(),
            }
        );
    <--------------->

    paresentando postagens de forma tosca
    <-------   main.html         -------->
        <template name="quadroDePostagens">
            <p>Fotos</p>
        </template>

        explicar helpers

        <template name="quadroDePostagens">

            <div class="row">
            {{#each postagens}}

                <div id="{{_id}}" class="col-xs-12 col-sm-4 col-md-3">

                    <img src="{{imgSrc}}" class="img-responsive"/>
                    <p>
                        {{descricao}}
                    </p>
                    <p>
                        {{criadoEm}}
                    </p>
                </div>

            {{/each}}
            </div>

        </template>
    <--------------->

Melhorando a apresentação das postagens
    <-------   main.html         -------->
        <template name="quadroDePostagens">
            <p>Fotos</p>
        </template>

        explicar helpers

        <template name="quadroDePostagens">

            {{#each postagens}}
            <img src="{{imgSrc}}"/>
            <p>
                {{descricao}}
            </p>
            <p>
                {{criadoEm}}
            </p>

            {{/each}}
        </template>
    <--------------->


Inserindo e Removendo itens de uma coleção - para inserir recairemos na questão dos EVENTOS
    <-------    main.html     -------->
        <form class="js-formulario-inserir-postagem">

            <input type="text" name="img_src"  class="form-control" placeholder="Informe a URL da Imagem">
            <input type="text" name="descricao" class="form-control" placeholder="Escreva algo... ">

            <div  class="text-right">
                <button type="submit" class="btn btn-default">Add</button>
            </div>
        </form>
    <--------------->

    criar o template de events para add
    <-------    main.js     -------->
        "submit .js-formulario-inserir-postagem"(event, instance){
            var imgSrc = event.target.img_src.value;
            var descricao = event.target.descricao.value;


            Postagens.insert({
                'imgSrc':imgSrc,
                'descricao': descricao,
                'criadoEm': new Date(),
            });

            event.target.img_src.value = '';
            event.target.descricao.value = '';
        }
            https://s-media-cache-ak0.pinimg.com/originals/1f/bf/3d/1fbf3d0ec6276634a9dc60a19f47be84.jpg

        return false
    <--------------->

    criar o template de events para REMOVE
    <-------    main.html     -------->
        'click #js-remove-postage'(){
            var imgId = this._id;

            Postagens.remove({_id:imgId});
    }
    <--------------->

Criando uma nav bar com bootstrap
    <-------    main.html      -------->
        <nav class="navbar">
            <div class="container">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="navbar-brand" href="#" style="color: #fff">FIPicture</a>
                    </div>

                    <ul class="nav navbar-text navbar-right">
                        <span>Login</span>
                    </ul>
                </div>
            </div>
        </nav>
    <--------------->

Adicionando o thumbail
    <-------    main.html       -------->
    <div id="{{_id}}" class="col-xs-12 col-sm-4 col-md-3">

        <div class="thumbnail">
            <div class="text-right">
                <span id="js-remove-postage" class="glyphicon glyphicon-remove-circle" aria-hidden="true"
                    style="font-size: 25px;color:#878787"></span>
            </div>
            <img  src="{{imgSrc}}" alt="foto" class="img-responsive">

            <div class="caption">
                <p>{{descricao}}</p>
                <div>
                    <p>Autor:
                        <a href="#" class="js-set-image-filter">nome do usuario</a>
                    </p>
                </div>
            </div>
        </div>
    </div>

Altenticação do Usuario
    <-------    mains.js    -------->
        add login butons
        {{> loginButtons}}

        {{> loginButtons align="right"}}

        Accounts.ui.config({
            passwordSignupFields: "USERNAME_AND_EMAIL"
        });

    <--------------->

Adicioanando criado Por
        <-------    mains.js    -------->
            'criadoPor': Meteor.userId()

        <-------    -------->

Escondendo add for e butao de excluir se n estiver logado
        <-------    mains.js    -------->
            Template.body.helpers({
                isLoggedIn(){
                    if(Meteor.userId()){
                        return true;
                    }

                    return false;
                }
            });

            {{#if isLoggedIn}}
            <div style="padding-bottom:10px">
                {{> formularioInserirPostagem}}
            </div>
            {{/if}}


            BOTAO EXCLUIR POSTAGEM

            Template.quadroDePostagens.helpers({....

            isAutor(criadoPor){

                return criadoPor == Meteor.userId();
            }

        <-------    -------->



Hackeando o site
    <-------    packages    -------->
        remover o insecure  e autopublush

Publish
    <-------    packages    -------->
        remover o insecure  e autopublush



    Sessões - Criando um relógio


    Tornando a aplicação mais segura
    Deploy da aplicação online
    Dicas de desenvolvimento
    Onde encontrar Tutorias



//new Date().toLocaleTimeString("pt-BR")
